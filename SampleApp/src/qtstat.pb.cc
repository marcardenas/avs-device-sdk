// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qtstat.proto

#include "qtstat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace qtstat {
class HvacModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacMode>
      _instance;
} _HvacMode_default_instance_;
class FanModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FanMode>
      _instance;
} _FanMode_default_instance_;
class HvacStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacStateRequest>
      _instance;
} _HvacStateRequest_default_instance_;
class HvacStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacStateResponse>
      _instance;
} _HvacStateResponse_default_instance_;
class DisplayRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayRequest>
      _instance;
} _DisplayRequest_default_instance_;
class DisplayResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayResponse>
      _instance;
} _DisplayResponse_default_instance_;
class VoiceStatusRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceStatusRequest>
      _instance;
} _VoiceStatusRequest_default_instance_;
class VoiceStatusResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceStatusResponse>
      _instance;
} _VoiceStatusResponse_default_instance_;
class FloatValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatValue>
      _instance;
} _FloatValue_default_instance_;
}  // namespace qtstat
namespace protobuf_qtstat_2eproto {
void InitDefaultsHvacModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_HvacMode_default_instance_;
    new (ptr) ::qtstat::HvacMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::HvacMode::InitAsDefaultInstance();
}

void InitDefaultsHvacMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacModeImpl);
}

void InitDefaultsFanModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_FanMode_default_instance_;
    new (ptr) ::qtstat::FanMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::FanMode::InitAsDefaultInstance();
}

void InitDefaultsFanMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFanModeImpl);
}

void InitDefaultsHvacStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_HvacStateRequest_default_instance_;
    new (ptr) ::qtstat::HvacStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::HvacStateRequest::InitAsDefaultInstance();
}

void InitDefaultsHvacStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacStateRequestImpl);
}

void InitDefaultsHvacStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_HvacStateResponse_default_instance_;
    new (ptr) ::qtstat::HvacStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::HvacStateResponse::InitAsDefaultInstance();
}

void InitDefaultsHvacStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacStateResponseImpl);
}

void InitDefaultsDisplayRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_DisplayRequest_default_instance_;
    new (ptr) ::qtstat::DisplayRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::DisplayRequest::InitAsDefaultInstance();
}

void InitDefaultsDisplayRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayRequestImpl);
}

void InitDefaultsDisplayResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_DisplayResponse_default_instance_;
    new (ptr) ::qtstat::DisplayResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::DisplayResponse::InitAsDefaultInstance();
}

void InitDefaultsDisplayResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayResponseImpl);
}

void InitDefaultsVoiceStatusRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_VoiceStatusRequest_default_instance_;
    new (ptr) ::qtstat::VoiceStatusRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::VoiceStatusRequest::InitAsDefaultInstance();
}

void InitDefaultsVoiceStatusRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceStatusRequestImpl);
}

void InitDefaultsVoiceStatusResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_VoiceStatusResponse_default_instance_;
    new (ptr) ::qtstat::VoiceStatusResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::VoiceStatusResponse::InitAsDefaultInstance();
}

void InitDefaultsVoiceStatusResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceStatusResponseImpl);
}

void InitDefaultsFloatValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::qtstat::_FloatValue_default_instance_;
    new (ptr) ::qtstat::FloatValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::qtstat::FloatValue::InitAsDefaultInstance();
}

void InitDefaultsFloatValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFloatValueImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacMode, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::FanMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::FanMode, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, sp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, hsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, csp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::HvacStateResponse, fan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::DisplayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::DisplayRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::DisplayRequest, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::DisplayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::VoiceStatusRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::VoiceStatusRequest, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::VoiceStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::FloatValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::qtstat::FloatValue, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::qtstat::HvacMode)},
  { 6, -1, sizeof(::qtstat::FanMode)},
  { 12, -1, sizeof(::qtstat::HvacStateRequest)},
  { 17, -1, sizeof(::qtstat::HvacStateResponse)},
  { 27, -1, sizeof(::qtstat::DisplayRequest)},
  { 34, -1, sizeof(::qtstat::DisplayResponse)},
  { 39, -1, sizeof(::qtstat::VoiceStatusRequest)},
  { 45, -1, sizeof(::qtstat::VoiceStatusResponse)},
  { 50, -1, sizeof(::qtstat::FloatValue)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_HvacMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_FanMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_HvacStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_HvacStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_DisplayRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_DisplayResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_VoiceStatusRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_VoiceStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::qtstat::_FloatValue_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "qtstat.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014qtstat.proto\022\006qtstat\"+\n\010HvacMode\022\037\n\004mo"
      "de\030\001 \001(\0162\021.qtstat.HvacModes\")\n\007FanMode\022\036"
      "\n\004mode\030\001 \001(\0162\020.qtstat.FanModes\"\022\n\020HvacSt"
      "ateRequest\"y\n\021HvacStateResponse\022\n\n\002sp\030\001 "
      "\001(\002\022\013\n\003hsp\030\002 \001(\002\022\013\n\003csp\030\003 \001(\002\022\037\n\004mode\030\004 "
      "\001(\0162\021.qtstat.HvacModes\022\035\n\003fan\030\005 \001(\0162\020.qt"
      "stat.FanModes\".\n\016DisplayRequest\022\017\n\007messa"
      "ge\030\001 \001(\t\022\013\n\003url\030\002 \001(\t\"\021\n\017DisplayResponse"
      "\"8\n\022VoiceStatusRequest\022\"\n\005state\030\001 \001(\0162\023."
      "qtstat.VoiceStatus\"\025\n\023VoiceStatusRespons"
      "e\"\033\n\nFloatValue\022\r\n\005value\030\001 \001(\002*X\n\tHvacMo"
      "des\022\020\n\014HVAC_UNKNOWN\020\000\022\014\n\010HVAC_OFF\020\001\022\r\n\tH"
      "VAC_HEAT\020\002\022\r\n\tHVAC_COOL\020\003\022\r\n\tHVAC_AUTO\020\004"
      "*B\n\010FanModes\022\017\n\013FAN_UNKNOWN\020\000\022\013\n\007FAN_OFF"
      "\020\001\022\n\n\006FAN_ON\020\002\022\014\n\010FAN_CIRC\020\003*[\n\013VoiceSta"
      "tus\022\021\n\rVOICE_UNKNOWN\020\000\022\016\n\nVOICE_IDLE\020\001\022\023"
      "\n\017VOICE_LISTENING\020\002\022\024\n\020VOICE_PROCESSING\020"
      "\0032\223\004\n\006QtStat\022L\n\021UpdateVoiceStatus\022\032.qtst"
      "at.VoiceStatusRequest\032\033.qtstat.VoiceStat"
      "usResponse\022B\n\017PushDisplayInfo\022\026.qtstat.D"
      "isplayRequest\032\027.qtstat.DisplayResponse\022\?"
      "\n\010GetState\022\030.qtstat.HvacStateRequest\032\031.q"
      "tstat.HvacStateResponse\022<\n\013SetSetpoint\022\022"
      ".qtstat.FloatValue\032\031.qtstat.HvacStateRes"
      "ponse\022@\n\017SetHeatSetpoint\022\022.qtstat.FloatV"
      "alue\032\031.qtstat.HvacStateResponse\022@\n\017SetCo"
      "olSetpoint\022\022.qtstat.FloatValue\032\031.qtstat."
      "HvacStateResponse\022:\n\013SetHvacMode\022\020.qtsta"
      "t.HvacMode\032\031.qtstat.HvacStateResponse\0228\n"
      "\nSetFanMode\022\017.qtstat.FanMode\032\031.qtstat.Hv"
      "acStateResponseB+\n\024io.grpc.siana.qtstatB"
      "\013QtStatProtoP\001\242\002\003SQSb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1268);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "qtstat.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_qtstat_2eproto
namespace qtstat {
const ::google::protobuf::EnumDescriptor* HvacModes_descriptor() {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qtstat_2eproto::file_level_enum_descriptors[0];
}
bool HvacModes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FanModes_descriptor() {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qtstat_2eproto::file_level_enum_descriptors[1];
}
bool FanModes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceStatus_descriptor() {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_qtstat_2eproto::file_level_enum_descriptors[2];
}
bool VoiceStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void HvacMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HvacMode::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacMode::HvacMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsHvacMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.HvacMode)
}
HvacMode::HvacMode(const HvacMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:qtstat.HvacMode)
}

void HvacMode::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

HvacMode::~HvacMode() {
  // @@protoc_insertion_point(destructor:qtstat.HvacMode)
  SharedDtor();
}

void HvacMode::SharedDtor() {
}

void HvacMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacMode::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacMode& HvacMode::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsHvacMode();
  return *internal_default_instance();
}

HvacMode* HvacMode::New(::google::protobuf::Arena* arena) const {
  HvacMode* n = new HvacMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacMode::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

bool HvacMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.HvacMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qtstat.HvacModes mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::qtstat::HvacModes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.HvacMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.HvacMode)
  return false;
#undef DO_
}

void HvacMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.HvacModes mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.HvacMode)
}

::google::protobuf::uint8* HvacMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.HvacModes mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.HvacMode)
  return target;
}

size_t HvacMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.HvacMode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .qtstat.HvacModes mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.HvacMode)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.HvacMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.HvacMode)
    MergeFrom(*source);
  }
}

void HvacMode::MergeFrom(const HvacMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.HvacMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void HvacMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.HvacMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacMode::CopyFrom(const HvacMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.HvacMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacMode::IsInitialized() const {
  return true;
}

void HvacMode::Swap(HvacMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacMode::InternalSwap(HvacMode* other) {
  using std::swap;
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacMode::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FanMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FanMode::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FanMode::FanMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsFanMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.FanMode)
}
FanMode::FanMode(const FanMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:qtstat.FanMode)
}

void FanMode::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

FanMode::~FanMode() {
  // @@protoc_insertion_point(destructor:qtstat.FanMode)
  SharedDtor();
}

void FanMode::SharedDtor() {
}

void FanMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FanMode::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FanMode& FanMode::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsFanMode();
  return *internal_default_instance();
}

FanMode* FanMode::New(::google::protobuf::Arena* arena) const {
  FanMode* n = new FanMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FanMode::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

bool FanMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.FanMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qtstat.FanModes mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::qtstat::FanModes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.FanMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.FanMode)
  return false;
#undef DO_
}

void FanMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.FanModes mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.FanMode)
}

::google::protobuf::uint8* FanMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.FanModes mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.FanMode)
  return target;
}

size_t FanMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.FanMode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .qtstat.FanModes mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FanMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.FanMode)
  GOOGLE_DCHECK_NE(&from, this);
  const FanMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FanMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.FanMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.FanMode)
    MergeFrom(*source);
  }
}

void FanMode::MergeFrom(const FanMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.FanMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void FanMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.FanMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FanMode::CopyFrom(const FanMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.FanMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FanMode::IsInitialized() const {
  return true;
}

void FanMode::Swap(FanMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FanMode::InternalSwap(FanMode* other) {
  using std::swap;
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FanMode::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HvacStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacStateRequest::HvacStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsHvacStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.HvacStateRequest)
}
HvacStateRequest::HvacStateRequest(const HvacStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qtstat.HvacStateRequest)
}

void HvacStateRequest::SharedCtor() {
  _cached_size_ = 0;
}

HvacStateRequest::~HvacStateRequest() {
  // @@protoc_insertion_point(destructor:qtstat.HvacStateRequest)
  SharedDtor();
}

void HvacStateRequest::SharedDtor() {
}

void HvacStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacStateRequest::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacStateRequest& HvacStateRequest::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsHvacStateRequest();
  return *internal_default_instance();
}

HvacStateRequest* HvacStateRequest::New(::google::protobuf::Arena* arena) const {
  HvacStateRequest* n = new HvacStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HvacStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.HvacStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.HvacStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.HvacStateRequest)
  return false;
#undef DO_
}

void HvacStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.HvacStateRequest)
}

::google::protobuf::uint8* HvacStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.HvacStateRequest)
  return target;
}

size_t HvacStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.HvacStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.HvacStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.HvacStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.HvacStateRequest)
    MergeFrom(*source);
  }
}

void HvacStateRequest::MergeFrom(const HvacStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.HvacStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HvacStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.HvacStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacStateRequest::CopyFrom(const HvacStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.HvacStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacStateRequest::IsInitialized() const {
  return true;
}

void HvacStateRequest::Swap(HvacStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacStateRequest::InternalSwap(HvacStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacStateRequest::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HvacStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HvacStateResponse::kSpFieldNumber;
const int HvacStateResponse::kHspFieldNumber;
const int HvacStateResponse::kCspFieldNumber;
const int HvacStateResponse::kModeFieldNumber;
const int HvacStateResponse::kFanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacStateResponse::HvacStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsHvacStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.HvacStateResponse)
}
HvacStateResponse::HvacStateResponse(const HvacStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sp_, &from.sp_,
    static_cast<size_t>(reinterpret_cast<char*>(&fan_) -
    reinterpret_cast<char*>(&sp_)) + sizeof(fan_));
  // @@protoc_insertion_point(copy_constructor:qtstat.HvacStateResponse)
}

void HvacStateResponse::SharedCtor() {
  ::memset(&sp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fan_) -
      reinterpret_cast<char*>(&sp_)) + sizeof(fan_));
  _cached_size_ = 0;
}

HvacStateResponse::~HvacStateResponse() {
  // @@protoc_insertion_point(destructor:qtstat.HvacStateResponse)
  SharedDtor();
}

void HvacStateResponse::SharedDtor() {
}

void HvacStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacStateResponse::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacStateResponse& HvacStateResponse::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsHvacStateResponse();
  return *internal_default_instance();
}

HvacStateResponse* HvacStateResponse::New(::google::protobuf::Arena* arena) const {
  HvacStateResponse* n = new HvacStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fan_) -
      reinterpret_cast<char*>(&sp_)) + sizeof(fan_));
  _internal_metadata_.Clear();
}

bool HvacStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.HvacStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float sp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hsp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float csp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &csp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qtstat.HvacModes mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::qtstat::HvacModes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .qtstat.FanModes fan = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fan(static_cast< ::qtstat::FanModes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.HvacStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.HvacStateResponse)
  return false;
#undef DO_
}

void HvacStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sp = 1;
  if (this->sp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->sp(), output);
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->hsp(), output);
  }

  // float csp = 3;
  if (this->csp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->csp(), output);
  }

  // .qtstat.HvacModes mode = 4;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->mode(), output);
  }

  // .qtstat.FanModes fan = 5;
  if (this->fan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->fan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.HvacStateResponse)
}

::google::protobuf::uint8* HvacStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sp = 1;
  if (this->sp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->sp(), target);
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->hsp(), target);
  }

  // float csp = 3;
  if (this->csp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->csp(), target);
  }

  // .qtstat.HvacModes mode = 4;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->mode(), target);
  }

  // .qtstat.FanModes fan = 5;
  if (this->fan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->fan(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.HvacStateResponse)
  return target;
}

size_t HvacStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.HvacStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float sp = 1;
  if (this->sp() != 0) {
    total_size += 1 + 4;
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    total_size += 1 + 4;
  }

  // float csp = 3;
  if (this->csp() != 0) {
    total_size += 1 + 4;
  }

  // .qtstat.HvacModes mode = 4;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // .qtstat.FanModes fan = 5;
  if (this->fan() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fan());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.HvacStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.HvacStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.HvacStateResponse)
    MergeFrom(*source);
  }
}

void HvacStateResponse::MergeFrom(const HvacStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.HvacStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sp() != 0) {
    set_sp(from.sp());
  }
  if (from.hsp() != 0) {
    set_hsp(from.hsp());
  }
  if (from.csp() != 0) {
    set_csp(from.csp());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.fan() != 0) {
    set_fan(from.fan());
  }
}

void HvacStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.HvacStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacStateResponse::CopyFrom(const HvacStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.HvacStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacStateResponse::IsInitialized() const {
  return true;
}

void HvacStateResponse::Swap(HvacStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacStateResponse::InternalSwap(HvacStateResponse* other) {
  using std::swap;
  swap(sp_, other->sp_);
  swap(hsp_, other->hsp_);
  swap(csp_, other->csp_);
  swap(mode_, other->mode_);
  swap(fan_, other->fan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacStateResponse::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayRequest::kMessageFieldNumber;
const int DisplayRequest::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayRequest::DisplayRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsDisplayRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.DisplayRequest)
}
DisplayRequest::DisplayRequest(const DisplayRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:qtstat.DisplayRequest)
}

void DisplayRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DisplayRequest::~DisplayRequest() {
  // @@protoc_insertion_point(destructor:qtstat.DisplayRequest)
  SharedDtor();
}

void DisplayRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisplayRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayRequest::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayRequest& DisplayRequest::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsDisplayRequest();
  return *internal_default_instance();
}

DisplayRequest* DisplayRequest::New(::google::protobuf::Arena* arena) const {
  DisplayRequest* n = new DisplayRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DisplayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.DisplayRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qtstat.DisplayRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qtstat.DisplayRequest.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.DisplayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.DisplayRequest)
  return false;
#undef DO_
}

void DisplayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qtstat.DisplayRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qtstat.DisplayRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.DisplayRequest)
}

::google::protobuf::uint8* DisplayRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qtstat.DisplayRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qtstat.DisplayRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.DisplayRequest)
  return target;
}

size_t DisplayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.DisplayRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.DisplayRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.DisplayRequest)
    MergeFrom(*source);
  }
}

void DisplayRequest::MergeFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void DisplayRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayRequest::CopyFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayRequest::IsInitialized() const {
  return true;
}

void DisplayRequest::Swap(DisplayRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayRequest::InternalSwap(DisplayRequest* other) {
  using std::swap;
  message_.Swap(&other->message_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayRequest::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayResponse::DisplayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsDisplayResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.DisplayResponse)
}
DisplayResponse::DisplayResponse(const DisplayResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qtstat.DisplayResponse)
}

void DisplayResponse::SharedCtor() {
  _cached_size_ = 0;
}

DisplayResponse::~DisplayResponse() {
  // @@protoc_insertion_point(destructor:qtstat.DisplayResponse)
  SharedDtor();
}

void DisplayResponse::SharedDtor() {
}

void DisplayResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayResponse::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayResponse& DisplayResponse::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsDisplayResponse();
  return *internal_default_instance();
}

DisplayResponse* DisplayResponse::New(::google::protobuf::Arena* arena) const {
  DisplayResponse* n = new DisplayResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DisplayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.DisplayResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.DisplayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.DisplayResponse)
  return false;
#undef DO_
}

void DisplayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.DisplayResponse)
}

::google::protobuf::uint8* DisplayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.DisplayResponse)
  return target;
}

size_t DisplayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.DisplayResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.DisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.DisplayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.DisplayResponse)
    MergeFrom(*source);
  }
}

void DisplayResponse::MergeFrom(const DisplayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.DisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisplayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.DisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayResponse::CopyFrom(const DisplayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.DisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayResponse::IsInitialized() const {
  return true;
}

void DisplayResponse::Swap(DisplayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayResponse::InternalSwap(DisplayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayResponse::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceStatusRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoiceStatusRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceStatusRequest::VoiceStatusRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsVoiceStatusRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.VoiceStatusRequest)
}
VoiceStatusRequest::VoiceStatusRequest(const VoiceStatusRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:qtstat.VoiceStatusRequest)
}

void VoiceStatusRequest::SharedCtor() {
  state_ = 0;
  _cached_size_ = 0;
}

VoiceStatusRequest::~VoiceStatusRequest() {
  // @@protoc_insertion_point(destructor:qtstat.VoiceStatusRequest)
  SharedDtor();
}

void VoiceStatusRequest::SharedDtor() {
}

void VoiceStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceStatusRequest::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceStatusRequest& VoiceStatusRequest::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsVoiceStatusRequest();
  return *internal_default_instance();
}

VoiceStatusRequest* VoiceStatusRequest::New(::google::protobuf::Arena* arena) const {
  VoiceStatusRequest* n = new VoiceStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.VoiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_ = 0;
  _internal_metadata_.Clear();
}

bool VoiceStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.VoiceStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .qtstat.VoiceStatus state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::qtstat::VoiceStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.VoiceStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.VoiceStatusRequest)
  return false;
#undef DO_
}

void VoiceStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.VoiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.VoiceStatus state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.VoiceStatusRequest)
}

::google::protobuf::uint8* VoiceStatusRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.VoiceStatusRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .qtstat.VoiceStatus state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.VoiceStatusRequest)
  return target;
}

size_t VoiceStatusRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.VoiceStatusRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .qtstat.VoiceStatus state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.VoiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceStatusRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceStatusRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.VoiceStatusRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.VoiceStatusRequest)
    MergeFrom(*source);
  }
}

void VoiceStatusRequest::MergeFrom(const VoiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.VoiceStatusRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
}

void VoiceStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.VoiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceStatusRequest::CopyFrom(const VoiceStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.VoiceStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceStatusRequest::IsInitialized() const {
  return true;
}

void VoiceStatusRequest::Swap(VoiceStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceStatusRequest::InternalSwap(VoiceStatusRequest* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceStatusRequest::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceStatusResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceStatusResponse::VoiceStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsVoiceStatusResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.VoiceStatusResponse)
}
VoiceStatusResponse::VoiceStatusResponse(const VoiceStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qtstat.VoiceStatusResponse)
}

void VoiceStatusResponse::SharedCtor() {
  _cached_size_ = 0;
}

VoiceStatusResponse::~VoiceStatusResponse() {
  // @@protoc_insertion_point(destructor:qtstat.VoiceStatusResponse)
  SharedDtor();
}

void VoiceStatusResponse::SharedDtor() {
}

void VoiceStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceStatusResponse::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceStatusResponse& VoiceStatusResponse::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsVoiceStatusResponse();
  return *internal_default_instance();
}

VoiceStatusResponse* VoiceStatusResponse::New(::google::protobuf::Arena* arena) const {
  VoiceStatusResponse* n = new VoiceStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.VoiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool VoiceStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.VoiceStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.VoiceStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.VoiceStatusResponse)
  return false;
#undef DO_
}

void VoiceStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.VoiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.VoiceStatusResponse)
}

::google::protobuf::uint8* VoiceStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.VoiceStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.VoiceStatusResponse)
  return target;
}

size_t VoiceStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.VoiceStatusResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.VoiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.VoiceStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.VoiceStatusResponse)
    MergeFrom(*source);
  }
}

void VoiceStatusResponse::MergeFrom(const VoiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.VoiceStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VoiceStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.VoiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceStatusResponse::CopyFrom(const VoiceStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.VoiceStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceStatusResponse::IsInitialized() const {
  return true;
}

void VoiceStatusResponse::Swap(VoiceStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceStatusResponse::InternalSwap(VoiceStatusResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceStatusResponse::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FloatValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatValue::FloatValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_qtstat_2eproto::InitDefaultsFloatValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qtstat.FloatValue)
}
FloatValue::FloatValue(const FloatValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:qtstat.FloatValue)
}

void FloatValue::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

FloatValue::~FloatValue() {
  // @@protoc_insertion_point(destructor:qtstat.FloatValue)
  SharedDtor();
}

void FloatValue::SharedDtor() {
}

void FloatValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatValue::descriptor() {
  ::protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatValue& FloatValue::default_instance() {
  ::protobuf_qtstat_2eproto::InitDefaultsFloatValue();
  return *internal_default_instance();
}

FloatValue* FloatValue::New(::google::protobuf::Arena* arena) const {
  FloatValue* n = new FloatValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatValue::Clear() {
// @@protoc_insertion_point(message_clear_start:qtstat.FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool FloatValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qtstat.FloatValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qtstat.FloatValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qtstat.FloatValue)
  return false;
#undef DO_
}

void FloatValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qtstat.FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:qtstat.FloatValue)
}

::google::protobuf::uint8* FloatValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qtstat.FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qtstat.FloatValue)
  return target;
}

size_t FloatValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qtstat.FloatValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float value = 1;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qtstat.FloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qtstat.FloatValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qtstat.FloatValue)
    MergeFrom(*source);
  }
}

void FloatValue::MergeFrom(const FloatValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qtstat.FloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void FloatValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qtstat.FloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatValue::CopyFrom(const FloatValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qtstat.FloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatValue::IsInitialized() const {
  return true;
}

void FloatValue::Swap(FloatValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatValue::InternalSwap(FloatValue* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatValue::GetMetadata() const {
  protobuf_qtstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_qtstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace qtstat

// @@protoc_insertion_point(global_scope)
