// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: siana-stat.proto

#include "siana-stat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class VoiceAssistantRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceAssistantRequest>
      _instance;
} _VoiceAssistantRequest_default_instance_;
class VoiceAssistantResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceAssistantResponse>
      _instance;
} _VoiceAssistantResponse_default_instance_;
class VoiceStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceStateRequest>
      _instance;
} _VoiceStateRequest_default_instance_;
class VoiceStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VoiceStateResponse>
      _instance;
} _VoiceStateResponse_default_instance_;
class FloatValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatValue>
      _instance;
} _FloatValue_default_instance_;
class HvacModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacMode>
      _instance;
} _HvacMode_default_instance_;
class FanModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FanMode>
      _instance;
} _FanMode_default_instance_;
class HvacStateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacStateRequest>
      _instance;
} _HvacStateRequest_default_instance_;
class HvacStateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HvacStateResponse>
      _instance;
} _HvacStateResponse_default_instance_;
class DisplayRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayRequest>
      _instance;
} _DisplayRequest_default_instance_;
class DisplayResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisplayResponse>
      _instance;
} _DisplayResponse_default_instance_;
namespace protobuf_siana_2dstat_2eproto {
void InitDefaultsEmptyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Empty_default_instance_;
    new (ptr) ::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Empty::InitAsDefaultInstance();
}

void InitDefaultsEmpty() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEmptyImpl);
}

void InitDefaultsVoiceAssistantRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VoiceAssistantRequest_default_instance_;
    new (ptr) ::VoiceAssistantRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VoiceAssistantRequest::InitAsDefaultInstance();
}

void InitDefaultsVoiceAssistantRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceAssistantRequestImpl);
}

void InitDefaultsVoiceAssistantResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VoiceAssistantResponse_default_instance_;
    new (ptr) ::VoiceAssistantResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VoiceAssistantResponse::InitAsDefaultInstance();
}

void InitDefaultsVoiceAssistantResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceAssistantResponseImpl);
}

void InitDefaultsVoiceStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VoiceStateRequest_default_instance_;
    new (ptr) ::VoiceStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VoiceStateRequest::InitAsDefaultInstance();
}

void InitDefaultsVoiceStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceStateRequestImpl);
}

void InitDefaultsVoiceStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_VoiceStateResponse_default_instance_;
    new (ptr) ::VoiceStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VoiceStateResponse::InitAsDefaultInstance();
}

void InitDefaultsVoiceStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVoiceStateResponseImpl);
}

void InitDefaultsFloatValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FloatValue_default_instance_;
    new (ptr) ::FloatValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FloatValue::InitAsDefaultInstance();
}

void InitDefaultsFloatValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFloatValueImpl);
}

void InitDefaultsHvacModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HvacMode_default_instance_;
    new (ptr) ::HvacMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HvacMode::InitAsDefaultInstance();
}

void InitDefaultsHvacMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacModeImpl);
}

void InitDefaultsFanModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_FanMode_default_instance_;
    new (ptr) ::FanMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FanMode::InitAsDefaultInstance();
}

void InitDefaultsFanMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFanModeImpl);
}

void InitDefaultsHvacStateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_HvacStateRequest_default_instance_;
    new (ptr) ::HvacStateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HvacStateRequest::InitAsDefaultInstance();
}

void InitDefaultsHvacStateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacStateRequestImpl);
}

void InitDefaultsHvacStateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_siana_2dstat_2eproto::InitDefaultsHvacMode();
  protobuf_siana_2dstat_2eproto::InitDefaultsFanMode();
  {
    void* ptr = &::_HvacStateResponse_default_instance_;
    new (ptr) ::HvacStateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HvacStateResponse::InitAsDefaultInstance();
}

void InitDefaultsHvacStateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHvacStateResponseImpl);
}

void InitDefaultsDisplayRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DisplayRequest_default_instance_;
    new (ptr) ::DisplayRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DisplayRequest::InitAsDefaultInstance();
}

void InitDefaultsDisplayRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayRequestImpl);
}

void InitDefaultsDisplayResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_DisplayResponse_default_instance_;
    new (ptr) ::DisplayResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DisplayResponse::InitAsDefaultInstance();
}

void InitDefaultsDisplayResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDisplayResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceAssistantRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceAssistantRequest, assistant_request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceAssistantResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceAssistantResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceStateRequest, assistant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceStateRequest, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VoiceStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FloatValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FloatValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FanMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, sp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, hsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, csp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::HvacStateResponse, fan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisplayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisplayRequest, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisplayRequest, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DisplayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Empty)},
  { 5, -1, sizeof(::VoiceAssistantRequest)},
  { 11, -1, sizeof(::VoiceAssistantResponse)},
  { 17, -1, sizeof(::VoiceStateRequest)},
  { 24, -1, sizeof(::VoiceStateResponse)},
  { 29, -1, sizeof(::FloatValue)},
  { 35, -1, sizeof(::HvacMode)},
  { 40, -1, sizeof(::FanMode)},
  { 45, -1, sizeof(::HvacStateRequest)},
  { 50, -1, sizeof(::HvacStateResponse)},
  { 60, -1, sizeof(::DisplayRequest)},
  { 67, -1, sizeof(::DisplayResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VoiceAssistantRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VoiceAssistantResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VoiceStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_VoiceStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FloatValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HvacMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FanMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HvacStateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_HvacStateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DisplayRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DisplayResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "siana-stat.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020siana-stat.proto\"\007\n\005Empty\"C\n\025VoiceAssi"
      "stantRequest\022*\n\021assistant_request\030\001 \001(\0162"
      "\017.VoiceAssistant\"\?\n\026VoiceAssistantRespon"
      "se\022%\n\006status\030\001 \001(\0162\025.VoiceAssistantStatu"
      "s\"\\\n\021VoiceStateRequest\022\"\n\tassistant\030\001 \001("
      "\0162\017.VoiceAssistant\022#\n\005state\030\002 \001(\0162\024.Voic"
      "eAssistantState\"\024\n\022VoiceStateResponse\"\033\n"
      "\nFloatValue\022\r\n\005value\030\001 \001(\002\"M\n\010HvacMode\"A"
      "\n\004Enum\022\014\n\010HVAC_OFF\020\000\022\r\n\tHVAC_HEAT\020\001\022\r\n\tH"
      "VAC_COOL\020\002\022\r\n\tHVAC_AUTO\020\003\"8\n\007FanMode\"-\n\004"
      "Enum\022\013\n\007FAN_OFF\020\000\022\n\n\006FAN_ON\020\001\022\014\n\010FAN_CIR"
      "C\020\002\"\022\n\020HvacStateRequest\"i\n\021HvacStateResp"
      "onse\022\n\n\002sp\030\001 \001(\002\022\013\n\003hsp\030\002 \001(\002\022\013\n\003csp\030\003 \001"
      "(\002\022\027\n\004mode\030\004 \001(\0132\t.HvacMode\022\025\n\003fan\030\005 \001(\013"
      "2\010.FanMode\".\n\016DisplayRequest\022\017\n\007message\030"
      "\001 \001(\t\022\013\n\003url\030\002 \001(\t\"\021\n\017DisplayResponse*y\n"
      "\016VoiceAssistant\022\033\n\027VOICE_ASSISTANT_UNKNO"
      "WN\020\000\022\027\n\023VOICE_ASSISTANT_AVS\020\001\022\027\n\023VOICE_A"
      "SSISTANT_GVA\020\002\022\030\n\024VOICE_ASSISTANT_NONE\020\003"
      "*W\n\023VoiceAssistantState\022\016\n\nVA_UNKNOWN\020\000\022"
      "\013\n\007VA_IDLE\020\001\022\020\n\014VA_LISTENING\020\002\022\021\n\rVA_PRO"
      "CESSING\020\003*s\n\024VoiceAssistantStatus\022\025\n\021VA_"
      "STATUS_UNKNOWN\020\000\022\022\n\016VA_STATUS_OPEN\020\001\022\024\n\020"
      "VA_STATUS_CLOSED\020\002\022\032\n\026VA_STATUS_UNREGIST"
      "ERED\020\0032\351\003\n\tSianaStat\022G\n\024VoiceAssistantSe"
      "lect\022\026.VoiceAssistantRequest\032\027.VoiceAssi"
      "stantResponse\022;\n\020UpdateVoiceState\022\022.Voic"
      "eStateRequest\032\023.VoiceStateResponse\0224\n\017Pu"
      "shDisplayInfo\022\017.DisplayRequest\032\020.Display"
      "Response\0221\n\010GetState\022\021.HvacStateRequest\032"
      "\022.HvacStateResponse\022.\n\013SetSetpoint\022\013.Flo"
      "atValue\032\022.HvacStateResponse\0222\n\017SetHeatSe"
      "tpoint\022\013.FloatValue\032\022.HvacStateResponse\022"
      "/\n\014SetCoolpoint\022\013.FloatValue\032\022.HvacState"
      "Response\022,\n\013SetHvacMode\022\t.HvacMode\032\022.Hva"
      "cStateResponse\022*\n\nSetFanMode\022\010.FanMode\032\022"
      ".HvacStateResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1466);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "siana-stat.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_siana_2dstat_2eproto
const ::google::protobuf::EnumDescriptor* HvacMode_Enum_descriptor() {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_siana_2dstat_2eproto::file_level_enum_descriptors[0];
}
bool HvacMode_Enum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HvacMode_Enum HvacMode::HVAC_OFF;
const HvacMode_Enum HvacMode::HVAC_HEAT;
const HvacMode_Enum HvacMode::HVAC_COOL;
const HvacMode_Enum HvacMode::HVAC_AUTO;
const HvacMode_Enum HvacMode::Enum_MIN;
const HvacMode_Enum HvacMode::Enum_MAX;
const int HvacMode::Enum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FanMode_Enum_descriptor() {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_siana_2dstat_2eproto::file_level_enum_descriptors[1];
}
bool FanMode_Enum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FanMode_Enum FanMode::FAN_OFF;
const FanMode_Enum FanMode::FAN_ON;
const FanMode_Enum FanMode::FAN_CIRC;
const FanMode_Enum FanMode::Enum_MIN;
const FanMode_Enum FanMode::Enum_MAX;
const int FanMode::Enum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* VoiceAssistant_descriptor() {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_siana_2dstat_2eproto::file_level_enum_descriptors[2];
}
bool VoiceAssistant_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceAssistantState_descriptor() {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_siana_2dstat_2eproto::file_level_enum_descriptors[3];
}
bool VoiceAssistantState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VoiceAssistantStatus_descriptor() {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_siana_2dstat_2eproto::file_level_enum_descriptors[4];
}
bool VoiceAssistantStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsEmpty();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Empty)
}

void Empty::SharedCtor() {
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsEmpty();
  return *internal_default_instance();
}

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceAssistantRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoiceAssistantRequest::kAssistantRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceAssistantRequest::VoiceAssistantRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceAssistantRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VoiceAssistantRequest)
}
VoiceAssistantRequest::VoiceAssistantRequest(const VoiceAssistantRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  assistant_request_ = from.assistant_request_;
  // @@protoc_insertion_point(copy_constructor:VoiceAssistantRequest)
}

void VoiceAssistantRequest::SharedCtor() {
  assistant_request_ = 0;
  _cached_size_ = 0;
}

VoiceAssistantRequest::~VoiceAssistantRequest() {
  // @@protoc_insertion_point(destructor:VoiceAssistantRequest)
  SharedDtor();
}

void VoiceAssistantRequest::SharedDtor() {
}

void VoiceAssistantRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceAssistantRequest::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceAssistantRequest& VoiceAssistantRequest::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceAssistantRequest();
  return *internal_default_instance();
}

VoiceAssistantRequest* VoiceAssistantRequest::New(::google::protobuf::Arena* arena) const {
  VoiceAssistantRequest* n = new VoiceAssistantRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceAssistantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceAssistantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assistant_request_ = 0;
  _internal_metadata_.Clear();
}

bool VoiceAssistantRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VoiceAssistantRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .VoiceAssistant assistant_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_assistant_request(static_cast< ::VoiceAssistant >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VoiceAssistantRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VoiceAssistantRequest)
  return false;
#undef DO_
}

void VoiceAssistantRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VoiceAssistantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistant assistant_request = 1;
  if (this->assistant_request() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->assistant_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VoiceAssistantRequest)
}

::google::protobuf::uint8* VoiceAssistantRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VoiceAssistantRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistant assistant_request = 1;
  if (this->assistant_request() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->assistant_request(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceAssistantRequest)
  return target;
}

size_t VoiceAssistantRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceAssistantRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .VoiceAssistant assistant_request = 1;
  if (this->assistant_request() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->assistant_request());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceAssistantRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceAssistantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceAssistantRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceAssistantRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceAssistantRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceAssistantRequest)
    MergeFrom(*source);
  }
}

void VoiceAssistantRequest::MergeFrom(const VoiceAssistantRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceAssistantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.assistant_request() != 0) {
    set_assistant_request(from.assistant_request());
  }
}

void VoiceAssistantRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceAssistantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceAssistantRequest::CopyFrom(const VoiceAssistantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceAssistantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceAssistantRequest::IsInitialized() const {
  return true;
}

void VoiceAssistantRequest::Swap(VoiceAssistantRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceAssistantRequest::InternalSwap(VoiceAssistantRequest* other) {
  using std::swap;
  swap(assistant_request_, other->assistant_request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceAssistantRequest::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceAssistantResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoiceAssistantResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceAssistantResponse::VoiceAssistantResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceAssistantResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VoiceAssistantResponse)
}
VoiceAssistantResponse::VoiceAssistantResponse(const VoiceAssistantResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:VoiceAssistantResponse)
}

void VoiceAssistantResponse::SharedCtor() {
  status_ = 0;
  _cached_size_ = 0;
}

VoiceAssistantResponse::~VoiceAssistantResponse() {
  // @@protoc_insertion_point(destructor:VoiceAssistantResponse)
  SharedDtor();
}

void VoiceAssistantResponse::SharedDtor() {
}

void VoiceAssistantResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceAssistantResponse::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceAssistantResponse& VoiceAssistantResponse::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceAssistantResponse();
  return *internal_default_instance();
}

VoiceAssistantResponse* VoiceAssistantResponse::New(::google::protobuf::Arena* arena) const {
  VoiceAssistantResponse* n = new VoiceAssistantResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceAssistantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceAssistantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool VoiceAssistantResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VoiceAssistantResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .VoiceAssistantStatus status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::VoiceAssistantStatus >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VoiceAssistantResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VoiceAssistantResponse)
  return false;
#undef DO_
}

void VoiceAssistantResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VoiceAssistantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistantStatus status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VoiceAssistantResponse)
}

::google::protobuf::uint8* VoiceAssistantResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VoiceAssistantResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistantStatus status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceAssistantResponse)
  return target;
}

size_t VoiceAssistantResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceAssistantResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .VoiceAssistantStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceAssistantResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceAssistantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceAssistantResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceAssistantResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceAssistantResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceAssistantResponse)
    MergeFrom(*source);
  }
}

void VoiceAssistantResponse::MergeFrom(const VoiceAssistantResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceAssistantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void VoiceAssistantResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceAssistantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceAssistantResponse::CopyFrom(const VoiceAssistantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceAssistantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceAssistantResponse::IsInitialized() const {
  return true;
}

void VoiceAssistantResponse::Swap(VoiceAssistantResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceAssistantResponse::InternalSwap(VoiceAssistantResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceAssistantResponse::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VoiceStateRequest::kAssistantFieldNumber;
const int VoiceStateRequest::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceStateRequest::VoiceStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VoiceStateRequest)
}
VoiceStateRequest::VoiceStateRequest(const VoiceStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&assistant_, &from.assistant_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&assistant_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:VoiceStateRequest)
}

void VoiceStateRequest::SharedCtor() {
  ::memset(&assistant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&assistant_)) + sizeof(state_));
  _cached_size_ = 0;
}

VoiceStateRequest::~VoiceStateRequest() {
  // @@protoc_insertion_point(destructor:VoiceStateRequest)
  SharedDtor();
}

void VoiceStateRequest::SharedDtor() {
}

void VoiceStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceStateRequest::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceStateRequest& VoiceStateRequest::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceStateRequest();
  return *internal_default_instance();
}

VoiceStateRequest* VoiceStateRequest::New(::google::protobuf::Arena* arena) const {
  VoiceStateRequest* n = new VoiceStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&assistant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&assistant_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool VoiceStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VoiceStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .VoiceAssistant assistant = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_assistant(static_cast< ::VoiceAssistant >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .VoiceAssistantState state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::VoiceAssistantState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VoiceStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VoiceStateRequest)
  return false;
#undef DO_
}

void VoiceStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VoiceStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistant assistant = 1;
  if (this->assistant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->assistant(), output);
  }

  // .VoiceAssistantState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VoiceStateRequest)
}

::google::protobuf::uint8* VoiceStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VoiceStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .VoiceAssistant assistant = 1;
  if (this->assistant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->assistant(), target);
  }

  // .VoiceAssistantState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceStateRequest)
  return target;
}

size_t VoiceStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .VoiceAssistant assistant = 1;
  if (this->assistant() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->assistant());
  }

  // .VoiceAssistantState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceStateRequest)
    MergeFrom(*source);
  }
}

void VoiceStateRequest::MergeFrom(const VoiceStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.assistant() != 0) {
    set_assistant(from.assistant());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void VoiceStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceStateRequest::CopyFrom(const VoiceStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceStateRequest::IsInitialized() const {
  return true;
}

void VoiceStateRequest::Swap(VoiceStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceStateRequest::InternalSwap(VoiceStateRequest* other) {
  using std::swap;
  swap(assistant_, other->assistant_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceStateRequest::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VoiceStateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VoiceStateResponse::VoiceStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VoiceStateResponse)
}
VoiceStateResponse::VoiceStateResponse(const VoiceStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:VoiceStateResponse)
}

void VoiceStateResponse::SharedCtor() {
  _cached_size_ = 0;
}

VoiceStateResponse::~VoiceStateResponse() {
  // @@protoc_insertion_point(destructor:VoiceStateResponse)
  SharedDtor();
}

void VoiceStateResponse::SharedDtor() {
}

void VoiceStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VoiceStateResponse::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VoiceStateResponse& VoiceStateResponse::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsVoiceStateResponse();
  return *internal_default_instance();
}

VoiceStateResponse* VoiceStateResponse::New(::google::protobuf::Arena* arena) const {
  VoiceStateResponse* n = new VoiceStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VoiceStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:VoiceStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool VoiceStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VoiceStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:VoiceStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VoiceStateResponse)
  return false;
#undef DO_
}

void VoiceStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VoiceStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VoiceStateResponse)
}

::google::protobuf::uint8* VoiceStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VoiceStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VoiceStateResponse)
  return target;
}

size_t VoiceStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VoiceStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VoiceStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VoiceStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VoiceStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VoiceStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VoiceStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VoiceStateResponse)
    MergeFrom(*source);
  }
}

void VoiceStateResponse::MergeFrom(const VoiceStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VoiceStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void VoiceStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VoiceStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoiceStateResponse::CopyFrom(const VoiceStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VoiceStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoiceStateResponse::IsInitialized() const {
  return true;
}

void VoiceStateResponse::Swap(VoiceStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VoiceStateResponse::InternalSwap(VoiceStateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VoiceStateResponse::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FloatValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatValue::FloatValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsFloatValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FloatValue)
}
FloatValue::FloatValue(const FloatValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:FloatValue)
}

void FloatValue::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

FloatValue::~FloatValue() {
  // @@protoc_insertion_point(destructor:FloatValue)
  SharedDtor();
}

void FloatValue::SharedDtor() {
}

void FloatValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatValue::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatValue& FloatValue::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsFloatValue();
  return *internal_default_instance();
}

FloatValue* FloatValue::New(::google::protobuf::Arena* arena) const {
  FloatValue* n = new FloatValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FloatValue::Clear() {
// @@protoc_insertion_point(message_clear_start:FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool FloatValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FloatValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FloatValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FloatValue)
  return false;
#undef DO_
}

void FloatValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FloatValue)
}

::google::protobuf::uint8* FloatValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FloatValue)
  return target;
}

size_t FloatValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FloatValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float value = 1;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FloatValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FloatValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FloatValue)
    MergeFrom(*source);
  }
}

void FloatValue::MergeFrom(const FloatValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void FloatValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatValue::CopyFrom(const FloatValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatValue::IsInitialized() const {
  return true;
}

void FloatValue::Swap(FloatValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatValue::InternalSwap(FloatValue* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatValue::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HvacMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacMode::HvacMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HvacMode)
}
HvacMode::HvacMode(const HvacMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HvacMode)
}

void HvacMode::SharedCtor() {
  _cached_size_ = 0;
}

HvacMode::~HvacMode() {
  // @@protoc_insertion_point(destructor:HvacMode)
  SharedDtor();
}

void HvacMode::SharedDtor() {
}

void HvacMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacMode::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacMode& HvacMode::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacMode();
  return *internal_default_instance();
}

HvacMode* HvacMode::New(::google::protobuf::Arena* arena) const {
  HvacMode* n = new HvacMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacMode::Clear() {
// @@protoc_insertion_point(message_clear_start:HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HvacMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HvacMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HvacMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HvacMode)
  return false;
#undef DO_
}

void HvacMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HvacMode)
}

::google::protobuf::uint8* HvacMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HvacMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HvacMode)
  return target;
}

size_t HvacMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HvacMode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HvacMode)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HvacMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HvacMode)
    MergeFrom(*source);
  }
}

void HvacMode::MergeFrom(const HvacMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HvacMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HvacMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HvacMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacMode::CopyFrom(const HvacMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HvacMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacMode::IsInitialized() const {
  return true;
}

void HvacMode::Swap(HvacMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacMode::InternalSwap(HvacMode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacMode::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FanMode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FanMode::FanMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsFanMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FanMode)
}
FanMode::FanMode(const FanMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:FanMode)
}

void FanMode::SharedCtor() {
  _cached_size_ = 0;
}

FanMode::~FanMode() {
  // @@protoc_insertion_point(destructor:FanMode)
  SharedDtor();
}

void FanMode::SharedDtor() {
}

void FanMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FanMode::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FanMode& FanMode::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsFanMode();
  return *internal_default_instance();
}

FanMode* FanMode::New(::google::protobuf::Arena* arena) const {
  FanMode* n = new FanMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FanMode::Clear() {
// @@protoc_insertion_point(message_clear_start:FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FanMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FanMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:FanMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FanMode)
  return false;
#undef DO_
}

void FanMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FanMode)
}

::google::protobuf::uint8* FanMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FanMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FanMode)
  return target;
}

size_t FanMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FanMode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FanMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FanMode)
  GOOGLE_DCHECK_NE(&from, this);
  const FanMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FanMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FanMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FanMode)
    MergeFrom(*source);
  }
}

void FanMode::MergeFrom(const FanMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FanMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FanMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FanMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FanMode::CopyFrom(const FanMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FanMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FanMode::IsInitialized() const {
  return true;
}

void FanMode::Swap(FanMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FanMode::InternalSwap(FanMode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FanMode::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HvacStateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacStateRequest::HvacStateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacStateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HvacStateRequest)
}
HvacStateRequest::HvacStateRequest(const HvacStateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:HvacStateRequest)
}

void HvacStateRequest::SharedCtor() {
  _cached_size_ = 0;
}

HvacStateRequest::~HvacStateRequest() {
  // @@protoc_insertion_point(destructor:HvacStateRequest)
  SharedDtor();
}

void HvacStateRequest::SharedDtor() {
}

void HvacStateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacStateRequest::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacStateRequest& HvacStateRequest::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacStateRequest();
  return *internal_default_instance();
}

HvacStateRequest* HvacStateRequest::New(::google::protobuf::Arena* arena) const {
  HvacStateRequest* n = new HvacStateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool HvacStateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HvacStateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:HvacStateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HvacStateRequest)
  return false;
#undef DO_
}

void HvacStateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HvacStateRequest)
}

::google::protobuf::uint8* HvacStateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HvacStateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HvacStateRequest)
  return target;
}

size_t HvacStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HvacStateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacStateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HvacStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacStateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacStateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HvacStateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HvacStateRequest)
    MergeFrom(*source);
  }
}

void HvacStateRequest::MergeFrom(const HvacStateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HvacStateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HvacStateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HvacStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacStateRequest::CopyFrom(const HvacStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HvacStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacStateRequest::IsInitialized() const {
  return true;
}

void HvacStateRequest::Swap(HvacStateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacStateRequest::InternalSwap(HvacStateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacStateRequest::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HvacStateResponse::InitAsDefaultInstance() {
  ::_HvacStateResponse_default_instance_._instance.get_mutable()->mode_ = const_cast< ::HvacMode*>(
      ::HvacMode::internal_default_instance());
  ::_HvacStateResponse_default_instance_._instance.get_mutable()->fan_ = const_cast< ::FanMode*>(
      ::FanMode::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HvacStateResponse::kSpFieldNumber;
const int HvacStateResponse::kHspFieldNumber;
const int HvacStateResponse::kCspFieldNumber;
const int HvacStateResponse::kModeFieldNumber;
const int HvacStateResponse::kFanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HvacStateResponse::HvacStateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacStateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:HvacStateResponse)
}
HvacStateResponse::HvacStateResponse(const HvacStateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mode()) {
    mode_ = new ::HvacMode(*from.mode_);
  } else {
    mode_ = NULL;
  }
  if (from.has_fan()) {
    fan_ = new ::FanMode(*from.fan_);
  } else {
    fan_ = NULL;
  }
  ::memcpy(&sp_, &from.sp_,
    static_cast<size_t>(reinterpret_cast<char*>(&csp_) -
    reinterpret_cast<char*>(&sp_)) + sizeof(csp_));
  // @@protoc_insertion_point(copy_constructor:HvacStateResponse)
}

void HvacStateResponse::SharedCtor() {
  ::memset(&mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&csp_) -
      reinterpret_cast<char*>(&mode_)) + sizeof(csp_));
  _cached_size_ = 0;
}

HvacStateResponse::~HvacStateResponse() {
  // @@protoc_insertion_point(destructor:HvacStateResponse)
  SharedDtor();
}

void HvacStateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete mode_;
  if (this != internal_default_instance()) delete fan_;
}

void HvacStateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HvacStateResponse::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HvacStateResponse& HvacStateResponse::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsHvacStateResponse();
  return *internal_default_instance();
}

HvacStateResponse* HvacStateResponse::New(::google::protobuf::Arena* arena) const {
  HvacStateResponse* n = new HvacStateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HvacStateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mode_ != NULL) {
    delete mode_;
  }
  mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && fan_ != NULL) {
    delete fan_;
  }
  fan_ = NULL;
  ::memset(&sp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&csp_) -
      reinterpret_cast<char*>(&sp_)) + sizeof(csp_));
  _internal_metadata_.Clear();
}

bool HvacStateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HvacStateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float sp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hsp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hsp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float csp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &csp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .HvacMode mode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .FanMode fan = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HvacStateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HvacStateResponse)
  return false;
#undef DO_
}

void HvacStateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sp = 1;
  if (this->sp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->sp(), output);
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->hsp(), output);
  }

  // float csp = 3;
  if (this->csp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->csp(), output);
  }

  // .HvacMode mode = 4;
  if (this->has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mode_, output);
  }

  // .FanMode fan = 5;
  if (this->has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->fan_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:HvacStateResponse)
}

::google::protobuf::uint8* HvacStateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:HvacStateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float sp = 1;
  if (this->sp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->sp(), target);
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->hsp(), target);
  }

  // float csp = 3;
  if (this->csp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->csp(), target);
  }

  // .HvacMode mode = 4;
  if (this->has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->mode_, deterministic, target);
  }

  // .FanMode fan = 5;
  if (this->has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->fan_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HvacStateResponse)
  return target;
}

size_t HvacStateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HvacStateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .HvacMode mode = 4;
  if (this->has_mode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mode_);
  }

  // .FanMode fan = 5;
  if (this->has_fan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fan_);
  }

  // float sp = 1;
  if (this->sp() != 0) {
    total_size += 1 + 4;
  }

  // float hsp = 2;
  if (this->hsp() != 0) {
    total_size += 1 + 4;
  }

  // float csp = 3;
  if (this->csp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HvacStateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HvacStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HvacStateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HvacStateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HvacStateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HvacStateResponse)
    MergeFrom(*source);
  }
}

void HvacStateResponse::MergeFrom(const HvacStateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HvacStateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mode()) {
    mutable_mode()->::HvacMode::MergeFrom(from.mode());
  }
  if (from.has_fan()) {
    mutable_fan()->::FanMode::MergeFrom(from.fan());
  }
  if (from.sp() != 0) {
    set_sp(from.sp());
  }
  if (from.hsp() != 0) {
    set_hsp(from.hsp());
  }
  if (from.csp() != 0) {
    set_csp(from.csp());
  }
}

void HvacStateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HvacStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HvacStateResponse::CopyFrom(const HvacStateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HvacStateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HvacStateResponse::IsInitialized() const {
  return true;
}

void HvacStateResponse::Swap(HvacStateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HvacStateResponse::InternalSwap(HvacStateResponse* other) {
  using std::swap;
  swap(mode_, other->mode_);
  swap(fan_, other->fan_);
  swap(sp_, other->sp_);
  swap(hsp_, other->hsp_);
  swap(csp_, other->csp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HvacStateResponse::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisplayRequest::kMessageFieldNumber;
const int DisplayRequest::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayRequest::DisplayRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsDisplayRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DisplayRequest)
}
DisplayRequest::DisplayRequest(const DisplayRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  // @@protoc_insertion_point(copy_constructor:DisplayRequest)
}

void DisplayRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DisplayRequest::~DisplayRequest() {
  // @@protoc_insertion_point(destructor:DisplayRequest)
  SharedDtor();
}

void DisplayRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DisplayRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayRequest::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayRequest& DisplayRequest::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsDisplayRequest();
  return *internal_default_instance();
}

DisplayRequest* DisplayRequest::New(::google::protobuf::Arena* arena) const {
  DisplayRequest* n = new DisplayRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DisplayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DisplayRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DisplayRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DisplayRequest.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DisplayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DisplayRequest)
  return false;
#undef DO_
}

void DisplayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisplayRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisplayRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DisplayRequest)
}

::google::protobuf::uint8* DisplayRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DisplayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisplayRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DisplayRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DisplayRequest)
  return target;
}

size_t DisplayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DisplayRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DisplayRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DisplayRequest)
    MergeFrom(*source);
  }
}

void DisplayRequest::MergeFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DisplayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
}

void DisplayRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayRequest::CopyFrom(const DisplayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DisplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayRequest::IsInitialized() const {
  return true;
}

void DisplayRequest::Swap(DisplayRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayRequest::InternalSwap(DisplayRequest* other) {
  using std::swap;
  message_.Swap(&other->message_);
  url_.Swap(&other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayRequest::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DisplayResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisplayResponse::DisplayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_siana_2dstat_2eproto::InitDefaultsDisplayResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DisplayResponse)
}
DisplayResponse::DisplayResponse(const DisplayResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DisplayResponse)
}

void DisplayResponse::SharedCtor() {
  _cached_size_ = 0;
}

DisplayResponse::~DisplayResponse() {
  // @@protoc_insertion_point(destructor:DisplayResponse)
  SharedDtor();
}

void DisplayResponse::SharedDtor() {
}

void DisplayResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisplayResponse::descriptor() {
  ::protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisplayResponse& DisplayResponse::default_instance() {
  ::protobuf_siana_2dstat_2eproto::InitDefaultsDisplayResponse();
  return *internal_default_instance();
}

DisplayResponse* DisplayResponse::New(::google::protobuf::Arena* arena) const {
  DisplayResponse* n = new DisplayResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisplayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool DisplayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DisplayResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:DisplayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DisplayResponse)
  return false;
#undef DO_
}

void DisplayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DisplayResponse)
}

::google::protobuf::uint8* DisplayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DisplayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DisplayResponse)
  return target;
}

size_t DisplayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DisplayResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisplayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisplayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisplayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DisplayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DisplayResponse)
    MergeFrom(*source);
  }
}

void DisplayResponse::MergeFrom(const DisplayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DisplayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisplayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisplayResponse::CopyFrom(const DisplayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DisplayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisplayResponse::IsInitialized() const {
  return true;
}

void DisplayResponse::Swap(DisplayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisplayResponse::InternalSwap(DisplayResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisplayResponse::GetMetadata() const {
  protobuf_siana_2dstat_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_siana_2dstat_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
